==465002== Memcheck, a memory error detector
==465002== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==465002== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==465002== Command: ./build/app/shell-app
==465002== Parent PID: 11921
==465002== 
==465002== Conditional jump or move depends on uninitialised value(s)
==465002==    at 0x109EBC: main (in /home/ubuntu/Course/week6/Week6_ValgrindExercise/build/app/shell-app)
==465002== 
==465002== 
==465002== HEAP SUMMARY:
==465002==     in use at exit: 44 bytes in 2 blocks
==465002==   total heap usage: 4 allocs, 2 frees, 73,772 bytes allocated
==465002== 
==465002== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==465002==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==465002==    by 0x10931E: AnalogSensor::Read() (in /home/ubuntu/Course/week6/Week6_ValgrindExercise/build/app/shell-app)
==465002==    by 0x109E9B: main (in /home/ubuntu/Course/week6/Week6_ValgrindExercise/build/app/shell-app)
==465002== 
==465002== LEAK SUMMARY:
==465002==    definitely lost: 24 bytes in 1 blocks
==465002==    indirectly lost: 20 bytes in 1 blocks
==465002==      possibly lost: 0 bytes in 0 blocks
==465002==    still reachable: 0 bytes in 0 blocks
==465002==         suppressed: 0 bytes in 0 blocks
==465002== 
==465002== Use --track-origins=yes to see where uninitialised values come from
==465002== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==465002== 
==465002== 1 errors in context 1 of 2:
==465002== Conditional jump or move depends on uninitialised value(s)
==465002==    at 0x109EBC: main (in /home/ubuntu/Course/week6/Week6_ValgrindExercise/build/app/shell-app)
==465002== 
==465002== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
